-- 안전 모드 해제
set sql_safe_updates=0;
-- delete from table
USE MY_EMP;
-- Q1 사원 테이블에서 사원번호가 7499사원의 월급을 5000 변경하자.
SELECT * FROM my_emp WHERE DEPTNO = 20;
UPDATE MY_EMP SET SAL =5000
WHERE EMPNO = 7499;

-- Q2. 부서 번호가 20번인 사원의 월급을 2000으로 변경하자. 
UPDATE MY_EMP
SET SAL =2000
WHERE DEPTNO =20;

-- Q3 MY_DEPT 테이블에 데이터를 입력 해보자. 50, RESEARCH, BOSTon
SELECT * FROM MY_DEPT;
INSERT INTO MY_DEPT
VALUES (50,'RESEARCH','BOSTON');

-- Q4. 방금전 입력한 데이터를 삭제 해보자.
DELETE FROM MY_DEPT
WHERE DEPTNO =50;

-- Q5. FORD의 월급을 4000으로 변경하고 부서번호를 30으로 변경한다.
SELECT *
FROM MY_EMP
WHERE ENAME = 'FORD';

UPDATE MY_EMP
SET SAL = 4000, DEPTNO = 30
WHERE ENAME = 'FORD';

-- Q6. 사원번호가 7698인 사원의 부서번호를 7934번의  사원의 부서 번호를 바꾸자.
SELECT DEPTNO
FROM MY_EMP
WHERE EMPNO =7934; -- 10
SELECT DEPTNO
FROM MY_EMP
WHERE EMPNO =7698; -- 30

UPDATE MY_EMP
SET DEPTNO = 10 -- you can't specify target table //MYSQL에서는 자기 테이블 참조 불가. 
WHERE EMPNO = 7968;

/*
-- 시험문제용
UPDATE MY_EMP
SET DEPTNO = (SELECT DEPTNO
FROM MY_EMP
WHERE EMPNO = 7934
WHERE EMPNO = 7698);
*/
-- 실행됨
UPDATE MY_EMP
SET DEPTNO = (SELECT DEPTNO
FROM EMP
WHERE EMPNO = 7934)
WHERE EMPNO = 7698;

-- Q7. MY_EMP 테이블에 값을 추가해보자.
DESC MY_EMP;
SELECT * FROM MY_EMP;
INSERT INTO MY_EMP VALUES (0001, '홍길동', 'CLERK', 7783, NOW(),9000,NULL,10);
INSERT INTO MY_EMP VALUES (0001, '홍길동', 'CLERK', 7784, NOW(),9000,NULL,10);
INSERT INTO MY_EMP VALUES (0001, '홍길동', 'CLERK', 7785, NOW(),9000,NULL,10);

-- 7-1 : 사원의 번호가 1이고 매니저가 7785을 가진 사원을 삭제 하자.
DELETE FROM MY_EMP
WHERE EMPNO = 1 AND MGR = 7785;

-- 7-2 : 데이터의 다양한 추가  
INSERT INTO MY_EMP(EMPNO, ENAME) VALUES (0002, '홍길동2');
SELECT * FROM MY_EMP;

-- 7-3 : 사번 0002에 DEPTNO 20을 입력 해보자. -> 수정 
UPDATE MY_EMP
SET DEPTNO = 20
WHERE EMPNO = 2;

-- 7-4 : MY_EMP 내용을 삭제하자 
DELETE FROM MY_EMP;

-- Q8. 서브쿼리를 이용한 INSERT, UPDATE, DELETE를 해보자  - t서브쿼리결과를 가상의 테이블 생성 후 리턴 
DROP TABLE MY_EMP;
CREATE TABLE MY_EMP
AS
SELECT *FROM EMP;
SELECT COUNT(*) FROM MY_EMP;

-- 8-1. WARD 과 같은 직업을 가진 사원을 모두 삭제하라.
DELETE FROM MY_EMP
WHERE JOB = (SELECT M_NEW.JOB FROM
                              (SELECT JOB FROM MY_EMP WHERE ENAME = 'WARD')
                              M_NEW);

-- 8-2. WARD의 월급을 'SMITH'의 월급과 같게 수정하라. 
UPDATE MY_EMP
SET SAL = (SELECT MY.SAL 
           FROM (SELECT SAL FROM MY_EMP WHERE ENAME = 'SMITH')MY)
WHERE ENAME = 'WARD';
-- 8-3. 'ALLEN'의 직업을 'WARD'의 직업과 같게 수정하라.
UPDATE MY_EMP
SET JOB = (SELECT MY.JOB 
           FROM (SELECT JOB FROM MY_EMP WHERE ENAME = 'WARD')MY)
WHERE ENAME = 'ALLEN';
-- 8-4. 사원번호가 7499 번인 사원과 같은 직업을 가진 사원들의 입사일을 오늘 날짜로 변경하라. 
UPDATE MY_EMP
SET HIREDATE = (SELECT MY.JOB 
           FROM (SELECT JOB FROM MY_EMP WHERE EMPNO = 7499)MY);
           
-- 9. 트랜잭션을 연동해 보자. ROLLBACK 취소; COMMIT 저장 ;
SET autocommit =false;
start transaction;

DELETE
FROM MY_EMP
WHERE DEPTNO = 10;
COMMIT;
SELECT COUNT(*) FROM MY_EMP; 

DELETE
FROM MY_EMP
WHERE DEPTNO = 20;

DELETE
FROM MY_EMP
WHERE DEPTNO = 10;
ROLLBACK;
SELECT COUNT(*) FROM MY_EMP; 

-- DDL(CREATE, ALTER, DROP)은 트랜잭션이 적용되지 않는다 


SELECT STRCMP('abcd','abc'); -- 왼쪽이 크면 1, 오른쪽이 크면 -1, 같으면 0 반환 






